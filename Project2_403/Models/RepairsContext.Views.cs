//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Project2_403.Models.RepairsContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb9f3651004b82ce0b695f09e5ab6202d79a52abddd836130d54dc61a0d3d305d))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsb9f3651004b82ce0b695f09e5ab6202d79a52abddd836130d54dc61a0d3d305d : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b9f3651004b82ce0b695f09e5ab6202d79a52abddd836130d54dc61a0d3d305d"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Brand")
            {
                return GetView0();
            }

            if (extentName == "RepairsContext.Brands")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.CustomerInfoModel")
            {
                return GetView2();
            }

            if (extentName == "RepairsContext.CustomerInfoRecords")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.DeviceReference")
            {
                return GetView4();
            }

            if (extentName == "RepairsContext.deviceReference")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.Device")
            {
                return GetView6();
            }

            if (extentName == "RepairsContext.Devices")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.RepairRecord")
            {
                return GetView8();
            }

            if (extentName == "RepairsContext.Repair")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.RepairInfoModel")
            {
                return GetView10();
            }

            if (extentName == "RepairsContext.RepairInfoRecords")
            {
                return GetView11();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Brand.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Brand
        [CodeFirstDatabaseSchema.Brand](T1.Brand_BrandId, T1.Brand_BrandName)
    FROM (
        SELECT 
            T.BrandId AS Brand_BrandId, 
            T.BrandName AS Brand_BrandName, 
            True AS _from0
        FROM RepairsContext.Brands AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.Brands.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Brands
        [Project2_403.Models.Brand](T1.Brand_BrandId, T1.Brand_BrandName)
    FROM (
        SELECT 
            T.BrandId AS Brand_BrandId, 
            T.BrandName AS Brand_BrandName, 
            True AS _from0
        FROM CodeFirstDatabase.Brand AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CustomerInfoModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerInfoModel
        [CodeFirstDatabaseSchema.CustomerInfoModel](T1.CustomerInfoModel_CustomerId, T1.CustomerInfoModel_FirstName, T1.CustomerInfoModel_LastName, T1.CustomerInfoModel_PhoneNumber)
    FROM (
        SELECT 
            T.CustomerId AS CustomerInfoModel_CustomerId, 
            T.FirstName AS CustomerInfoModel_FirstName, 
            T.LastName AS CustomerInfoModel_LastName, 
            T.PhoneNumber AS CustomerInfoModel_PhoneNumber, 
            True AS _from0
        FROM RepairsContext.CustomerInfoRecords AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.CustomerInfoRecords.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerInfoRecords
        [Project2_403.Models.CustomerInfoModel](T1.CustomerInfoModel_CustomerId, T1.CustomerInfoModel_FirstName, T1.CustomerInfoModel_LastName, T1.CustomerInfoModel_PhoneNumber)
    FROM (
        SELECT 
            T.CustomerId AS CustomerInfoModel_CustomerId, 
            T.FirstName AS CustomerInfoModel_FirstName, 
            T.LastName AS CustomerInfoModel_LastName, 
            T.PhoneNumber AS CustomerInfoModel_PhoneNumber, 
            True AS _from0
        FROM CodeFirstDatabase.CustomerInfoModel AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DeviceReference.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DeviceReference
        [CodeFirstDatabaseSchema.DeviceReference](T1.DeviceReference_DeviceReferenceId, T1.DeviceReference_DeviceModel, T1.DeviceReference_DeviceBrand, T1.DeviceReference_DeviceColor, T1.DeviceReference_DeviceCapacity, T1.DeviceReference_DeviceBattery, T1.DeviceReference_DeviceDescription)
    FROM (
        SELECT 
            T.DeviceReferenceId AS DeviceReference_DeviceReferenceId, 
            T.DeviceModel AS DeviceReference_DeviceModel, 
            T.DeviceBrand AS DeviceReference_DeviceBrand, 
            T.DeviceColor AS DeviceReference_DeviceColor, 
            T.DeviceCapacity AS DeviceReference_DeviceCapacity, 
            T.DeviceBattery AS DeviceReference_DeviceBattery, 
            T.DeviceDescription AS DeviceReference_DeviceDescription, 
            True AS _from0
        FROM RepairsContext.deviceReference AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.deviceReference.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing deviceReference
        [Project2_403.Models.DeviceReference](T1.DeviceReference_DeviceReferenceId, T1.DeviceReference_DeviceModel, T1.DeviceReference_DeviceBrand, T1.DeviceReference_DeviceColor, T1.DeviceReference_DeviceCapacity, T1.DeviceReference_DeviceBattery, T1.DeviceReference_DeviceDescription)
    FROM (
        SELECT 
            T.DeviceReferenceId AS DeviceReference_DeviceReferenceId, 
            T.DeviceModel AS DeviceReference_DeviceModel, 
            T.DeviceBrand AS DeviceReference_DeviceBrand, 
            T.DeviceColor AS DeviceReference_DeviceColor, 
            T.DeviceCapacity AS DeviceReference_DeviceCapacity, 
            T.DeviceBattery AS DeviceReference_DeviceBattery, 
            T.DeviceDescription AS DeviceReference_DeviceDescription, 
            True AS _from0
        FROM CodeFirstDatabase.DeviceReference AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Device.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Device
        [CodeFirstDatabaseSchema.Device](T1.Device_DeviceId, T1.Device_DeviceBrand, T1.Device_DeviceModel, T1.Device_DeviceColor, T1.Device_DeviceMemory)
    FROM (
        SELECT 
            T.DeviceId AS Device_DeviceId, 
            T.DeviceBrand AS Device_DeviceBrand, 
            T.DeviceModel AS Device_DeviceModel, 
            T.DeviceColor AS Device_DeviceColor, 
            T.DeviceMemory AS Device_DeviceMemory, 
            True AS _from0
        FROM RepairsContext.Devices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.Devices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Devices
        [Project2_403.Models.Device](T1.Device_DeviceId, T1.Device_DeviceBrand, T1.Device_DeviceModel, T1.Device_DeviceColor, T1.Device_DeviceMemory)
    FROM (
        SELECT 
            T.DeviceId AS Device_DeviceId, 
            T.DeviceBrand AS Device_DeviceBrand, 
            T.DeviceModel AS Device_DeviceModel, 
            T.DeviceColor AS Device_DeviceColor, 
            T.DeviceMemory AS Device_DeviceMemory, 
            True AS _from0
        FROM CodeFirstDatabase.Device AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.RepairRecord.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RepairRecord
        [CodeFirstDatabaseSchema.RepairRecord](T1.RepairRecord_RepairRecordId, T1.RepairRecord_RepairStatus, T1.RepairRecord_RepairComments)
    FROM (
        SELECT 
            T.RepairRecordId AS RepairRecord_RepairRecordId, 
            T.RepairStatus AS RepairRecord_RepairStatus, 
            T.RepairComments AS RepairRecord_RepairComments, 
            True AS _from0
        FROM RepairsContext.Repair AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.Repair.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Repair
        [Project2_403.Models.RepairRecord](T1.RepairRecord_RepairRecordId, T1.RepairRecord_RepairStatus, T1.RepairRecord_RepairComments)
    FROM (
        SELECT 
            T.RepairRecordId AS RepairRecord_RepairRecordId, 
            T.RepairStatus AS RepairRecord_RepairStatus, 
            T.RepairComments AS RepairRecord_RepairComments, 
            True AS _from0
        FROM CodeFirstDatabase.RepairRecord AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.RepairInfoModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RepairInfoModel
        [CodeFirstDatabaseSchema.RepairInfoModel](T1.RepairInfoModel_Id, T1.RepairInfoModel_RepairSerialNum, T1.RepairInfoModel_RepairSalesRepName, T1.RepairInfoModel_RepairTechName, T1.RepairInfoModel_RepairDropTime, T1.RepairInfoModel_RepairPickTime)
    FROM (
        SELECT 
            T.Id AS RepairInfoModel_Id, 
            T.RepairSerialNum AS RepairInfoModel_RepairSerialNum, 
            T.RepairSalesRepName AS RepairInfoModel_RepairSalesRepName, 
            T.RepairTechName AS RepairInfoModel_RepairTechName, 
            T.RepairDropTime AS RepairInfoModel_RepairDropTime, 
            T.RepairPickTime AS RepairInfoModel_RepairPickTime, 
            True AS _from0
        FROM RepairsContext.RepairInfoRecords AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for RepairsContext.RepairInfoRecords.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RepairInfoRecords
        [Project2_403.Models.RepairInfoModel](T1.RepairInfoModel_Id, T1.RepairInfoModel_RepairSerialNum, T1.RepairInfoModel_RepairSalesRepName, T1.RepairInfoModel_RepairTechName, T1.RepairInfoModel_RepairDropTime, T1.RepairInfoModel_RepairPickTime)
    FROM (
        SELECT 
            T.Id AS RepairInfoModel_Id, 
            T.RepairSerialNum AS RepairInfoModel_RepairSerialNum, 
            T.RepairSalesRepName AS RepairInfoModel_RepairSalesRepName, 
            T.RepairTechName AS RepairInfoModel_RepairTechName, 
            T.RepairDropTime AS RepairInfoModel_RepairDropTime, 
            T.RepairPickTime AS RepairInfoModel_RepairPickTime, 
            True AS _from0
        FROM CodeFirstDatabase.RepairInfoModel AS T
    ) AS T1");
        }
    }
}
